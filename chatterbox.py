import pandas as pd

import telegram
from telegram import (
    ReplyKeyboardMarkup,
    Update,
)
from telegram.ext import ContextTypes

from random import randint
from datetime import datetime, timedelta

from sqlalchemy import create_engine

from work import TELEGRAM_TOKEN, url_engine

bot = telegram.Bot(TELEGRAM_TOKEN)

engine = create_engine(url_engine)


async def get_chat_text_messages(
    update: Update, context: ContextTypes
) -> None:
    """–ë–∞–ª—Ç–æ–≤–Ω—è –≤ —á–∞—Ç–µ"""
    if update.effective_chat:

        await bot.send_message(
            chat_id=update.effective_chat.id, text=str(update.edited_message)
        )
    if update.message:
        user_id = update.message.from_user.id  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º ID —Å —Ç–µ–ª–µ–≥–∏
        msg = update.message.text
        msg_id = update.message.message_id
        chat_type = update.message.chat.type
    else:
        user_id = update.edited_message.from_user.id
        msg = update.edited_message.text
        msg_id = update.edited_message.message_id
        chat_type = update.edited_message.chat.type

    if (
        ("—Å–ø—Å" in msg.lower() or "—Å–ø–∞—Å–∏–±" in msg.lower())
        and chat_type == "private"
    ) or (
        "–ª—é—Ü" in msg.lower()
        and ("—Å–ø—Å" in msg.lower() or "—Å–ø–∞—Å–∏–±" in msg.lower())
        and (chat_type == "supergroup" or chat_type == "group")
    ):
        await bot.send_message(
            chat_id=update.effective_chat.id,
            text="–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! ;)",
            reply_to_message_id=msg_id,
        )
    elif (
        "–ª—é—Ü" in msg.lower()
        and ("–∫—Ä–∞—Å–∞–≤" in msg.lower() or "–º–æ–ª–æ–¥–µ—Ü" in msg.lower())
        and (chat_type == "supergroup" or chat_type == "group")
    ):
        rand_num = randint(1, 3)
        if rand_num == 1:
            await bot.send_message(
                chat_id=update.effective_chat.id,
                text="–°–ø–∞—Å–∏–±–æ ‚ò∫Ô∏è",
                reply_to_message_id=msg_id,
            )
        elif rand_num == 2:
            await bot.send_message(
                chat_id=update.effective_chat.id,
                text="–†–∞–¥ —Å—Ç–∞—Ä–∞—Ç—å—Å—è! ‚ò∫Ô∏è",
                reply_to_message_id=msg_id,
            )
        elif rand_num == 3:
            with open(f"./molodec.tgs", "rb") as sticker:
                await bot.send_sticker(
                    chat_id=update.effective_chat.id,
                    sticker=sticker,
                    reply_to_message_id=msg_id,
                )
    elif (
        "–ª—é—Ü" in msg.lower()
        and ("–≤—Ä–µ–º" in msg.lower() or "–∫–æ–Ω" in msg.lower())
        and "–∫–∑" in msg.lower()
        and (chat_type == "supergroup" or chat_type == "group")
    ):
        info = pd.read_sql(
            f"SELECT * FROM users WHERE user_id = '{update.effective_chat.id}';",
            engine,
        )
        hours = int(info.loc[0, "time_change_KZ"])
        now = datetime.now()
        time1 = timedelta(
            days=now.day,
            hours=now.hour,
            minutes=now.minute,
            seconds=now.second,
        )
        time2 = timedelta(days=now.day, hours=hours, minutes=30, seconds=0)
        time3 = time2 - time1
        if time3.days == -1:
            time2 = timedelta(
                days=now.day + 1, hours=hours, minutes=30, seconds=0
            )
            time3 = time2 - time1
        await bot.send_message(
            chat_id=update.effective_chat.id,
            text="–î–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ö.–ó. –æ—Å—Ç–∞–ª–æ—Å—å " + str(time3),
            reply_to_message_id=msg_id,
        )
    elif "id" == msg.lower() and (
        chat_type == "supergroup" or chat_type == "group"
    ):
        try:
            await bot.delete_message(
                chat_id=update.effective_chat.id, message_id=msg_id
            )
        except Exception as err:
            print(err)
        info = pd.read_sql(
            f"SELECT * FROM clan_id WHERE clan_id = '{update.effective_chat.id}';",
            engine,
        )
        user_name = pd.read_sql(
            f"SELECT * FROM users WHERE user_id = '{user_id}';", engine
        )
        if len(info) == 0 and len(user_name) != 0:
            engine.execute(
                f"INSERT INTO clan_id(clan_id, name_clan) VALUES('{update.effective_chat.id}', '{update.effective_chat.title}');"
            )
            engine.execute(
                f"INSERT INTO admins(user_id, name, name_clan) VALUES('{user_id}', '{user_name.loc[0,'name0']}', '{update.effective_chat.title}');"
            )
        await bot.send_message(
            chat_id=943180118,
            text="ID: "
            + str(update.effective_chat.id)
            + "\n name: "
            + str(update.effective_chat.title)
            + "\n 1–π –∞–¥–º–∏–Ω: "
            + str(user_id),
        )
    elif (
        "–ª—é—Ü" in msg.lower()
        and ("–¥–∞–π" in msg.lower() or "–ø–æ–¥–∫–∏–Ω—å" in msg.lower())
        and ("–¥–µ–Ω–µ–≥" in msg.lower() or "–º–æ–Ω–µ—Ç" in msg.lower())
        and (chat_type == "supergroup" or chat_type == "group")
    ):
        await bot.send_message(
            chat_id=update.effective_chat.id,
            text="–ù–µ, –Ω–µ –≤–∞—Ä–∏–∫... —Å–∞–º –≤ –∞–¥—É –Ω–∞ —Å—ä–µ–º–Ω–æ–π —Ö–∞—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é... =(",
            reply_to_message_id=msg_id,
        )
    elif (
        "–ª—é—Ü" in msg.lower()
        and ("—Ç—É—Ç" in msg.lower() or "–∂–∏–≤–æ–π" in msg.lower())
        and (chat_type == "supergroup" or chat_type == "group")
    ):
        await bot.send_message(
            chat_id=update.effective_chat.id,
            text="–ù—É, –∞ –≥–¥–µ –º–Ω–µ –µ—â–µ –±—ã—Ç—å!?",
            reply_to_message_id=msg_id,
        )
    elif (
        "–±–æ–π" == msg.lower()
        or "–±–∏—Ç–≤–∞" in msg.lower()
        or "–Ω–∞–∫–∞–∑–∞—Ç—å" in msg.lower()
        or "–ø–æ–±–∏—Ç—å" in msg.lower()
        or "–¥—É—ç–ª—å –≤ –æ—Ç–≤–µ—Ç" in msg.lower()
    ) and update.message.reply_to_message is not None:
        fighter = [
            update.message.from_user.first_name,
            update.message.reply_to_message.from_user.first_name,
        ]
        if fighter[0] != fighter[1]:
            action1 = [
                "–•–∏—Ç—Ä—ã–π –∂—É–∫ ",
                "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –≤–æ–∏–Ω ",
                "–ö–∞–∫ –Ω–∏–Ω–¥–∑—è –≤ –Ω–æ—á–∏ ",
                "–ë–µ—Å—Å—Ç—Ä–∞—à–Ω—ã–π –≥–µ—Ä–æ–π ",
            ]
            action2 = [
                " –Ω–∞–ø–∞–ª –Ω–∞ –±–µ–∑–∑–∞—â–∏—Ç–Ω–æ–≥–æ, ",
                " –¥–∞–ª –ø–æ—â—ë—á–∏–Ω—É, ",
                " –º–µ—Ç–Ω—É–ª –∫–æ–ø—å—ë, ",
                " –∑–∞–∫–∏–¥–∞–ª –∫–∞–º–Ω—è–º–∏, ",
                " —É—â–∏–ø–Ω—É–ª –∑–∞ –ø–æ–ø—É, ",
            ]
            action3 = [
                " –Ω–µ —Ä–∞—Å—Ç–µ—Ä—è–ª—Å—è! ",
                " –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –¥–ª—è –Ω–∞–ø–∞–¥–∞–≤—à–µ–≥–æ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∞—Ç–∞–∫—É! ",
                " —ç—Ç–æ–≥–æ –Ω–µ –æ–∂–∏–¥–∞–ª! ",
                " —É–≤–µ—Ä–Ω—É–ª—Å—è –∏ –¥–∞–ª –≤ –æ—Ç–≤–µ—Ç –º–µ–≥–∞-–ª–µ—â–∞! ",
                " –æ—Ç—Ä–∞–∑–∏–ª —É–¥–∞—Ä! ",
            ]
            action4 = [
                "–ó–∞–≤—è–∑–∞–ª–∞—Å—å –¥—Ä–∞–∫–∞...",
                "–°–≤–µ—Ä—à–∏–ª–æ—Å—å —ç–ø–∏—á–µ—Å–∫–æ–µ —Å—Ä–∞–∂–µ–Ω–∏–µ...",
                "–ù–∞—á–∞–ª–∞—Å—å –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω–∞—è –±–∏—Ç–≤–∞, –Ω–µ –Ω–∞ –∂–∏–∑–Ω—å, –∞ –Ω–∞ —Å–º–µ—Ä—Ç—å...",
                "... –∏ —Ç—Ä–µ—Å–Ω—É–ª –º–∏—Ä –Ω–∞–ø–æ–ø–æ–ª–∞–º –¥—ã–º–∏—Ç —Ä–∞–∑–ª–æ–º...",
            ]
            action_num1 = randint(0, 3)
            action_num2 = randint(0, 4)
            action_num3 = randint(0, 4)
            action_num4 = randint(0, 3)
            fighter1 = randint(0, 100)
            fighter2 = randint(0, 100)
            if fighter1 == fighter2:
                await bot.send_message(
                    chat_id=update.effective_chat.id,
                    text=action1[action_num1]
                    + str(fighter[0])
                    + action2[action_num2]
                    + str(fighter[1])
                    + action3[action_num3]
                    + action4[action_num4],
                )
                with open("./fight/fight2.mp4", "rb") as video:
                    await bot.send_video(
                        chat_id=update.effective_chat.id, video=video
                    )
                await bot.send_message(
                    chat_id=update.effective_chat.id,
                    text="–í—ã —Å—Ä–∞–∂–∞–ª–∏—Å—å –æ—á–µ–Ω—å –¥–æ–ª–≥–æ, –Ω–æ –ø–æ—Ç–æ–º —É—Å—Ç–∞–ª–∏ –∏ "
                    "–ø–æ–º–∏—Ä–∏–ª–∏—Å—å! ü§ù –ù–ò–ß–¨–Ø ü§ù \n\n –®–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É:\n"
                    + str(fighter[0])
                    + ": "
                    + str(fighter1)
                    + "% \n"
                    + str(fighter[1])
                    + ": "
                    + str(fighter1)
                    + "%",
                )
            else:
                if fighter1 > fighter2:
                    winer = 0
                else:
                    winer = 1
                num = randint(1, 13)
                await bot.send_message(
                    chat_id=update.effective_chat.id,
                    text=action1[action_num1]
                    + str(fighter[0])
                    + action2[action_num2]
                    + str(fighter[1])
                    + action3[action_num3]
                    + action4[action_num4],
                )
                with open(f"./fight/fight{num}.mp4", "rb") as video:
                    await bot.send_video(
                        chat_id=update.effective_chat.id, video=video
                    )
                await bot.send_message(
                    chat_id=update.effective_chat.id,
                    text="–ü–æ–±–µ–¥–∏–ª: üëë"
                    + str(fighter[winer])
                    + "üëë\n\n–®–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É:\n"
                    + str(fighter[0])
                    + ": "
                    + str(fighter1)
                    + "% \n"
                    + str(fighter[1])
                    + ": "
                    + str(fighter2)
                    + "%",
                )
        else:
            with open("./fight/fightSelf.mp4", "rb") as video:
                await bot.send_video(
                    chat_id=update.effective_chat.id, video=video
                )
            await bot.send_message(
                chat_id=update.effective_chat.id,
                text="–ù—É —Ç—ã –ø—Ä–æ—Å—Ç–æ –¥–∞–ª —Å–∞–º —Å–µ–±–µ –≤ –≥–ª–∞–∑, –≤—ã—Ä—É–±–∏–ª—Å—è –∏ —É—Å–Ω—É–ª!ü§ï",
            )
    elif (
        "–ª—é—Ü" in msg.lower()
        and (
            "–±–∞–ª–±–µ—Å" in msg.lower()
            or "–ø–ª–æ—Ö–æ–π" in msg.lower()
            or "—Ç—É–ø–æ–π" in msg.lower()
        )
        and (chat_type == "supergroup" or chat_type == "group")
    ):
        with open("./balbes.tgs", "rb") as sticker:
            await bot.send_sticker(
                chat_id=update.effective_chat.id, sticker=sticker
            )
    else:
        if chat_type == "supergroup" or chat_type == "group":
            pass
        else:
            await bot.send_message(
                chat_id=update.effective_chat.id,
                text="–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —è –µ—â–µ –Ω–µ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π. "
                "–ù–∞–∂–º–∏ –ø–æ–º–æ—â—å, –∏ —Ç–∞–º –±—É–¥—É—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é ;) "
                "(–í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É: @Menace134)",
            )
